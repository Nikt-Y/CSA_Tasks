#ifndef __container__
#define __container__

//------------------------------------------------------------------------------
// container.h - содержит тип данных,
// представляющий простейший контейнер
//------------------------------------------------------------------------------

#include "language.h"

//------------------------------------------------------------------------------
// Простейший контейнер на основе одномерного массива

class Container {
private:
    void Clear(); // Очистка контейнера от элементов (освобождение памяти)
    int len; // текущая длина
    Language *cont[10000];

    // Приватный метод сортировки контейнера
    void Quicksort(Language *mas[], int size);

public:
    // Конструктор контейнера
    Container();

    // Деструктор контейнера
    ~Container();

    // Ввод содержимого контейнера из указанного потока
    void In(ifstream &ifst);

    // Случайный ввод содержимого контейнера
    void InRnd(int size);

    // Вывод содержимого контейнера в указанный поток
    void Out(ofstream &ofst);

    // Публичный метод сортировки контейнера
    void Quicksort();
};

#endif
